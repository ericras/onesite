<?php

/**
 *
 * @author erasmussen
 *
 */
abstract class ReleaseMigration extends Migration {
  public function __construct() {
    parent::__construct(MigrateGroup::getInstance('release'));

    $this->team = array(
      new MigrateTeamMember('Eric Rasmussen', 'eric@unl.edu', t('M.M.F.')),
    );

    // Use another database
    Database::addConnectionInfo('news_migration', 'default', array(
      'driver' => 'mysql',
      'database' => 'news',
      'username' => 'root',
      'password' => 'ertyu9',
      'host' => 'localhost',
      'prefix' => '',
    ));

  }
}

/**
 *
 * @author erasmussen
 *
 */
class ReleaseNodeMigration extends ReleaseMigration {
  public function __construct() {
    parent::__construct();
    $this->description = t('Migrate release pages to nodes');

    $query = Database::getConnection('default', 'news_migration')
      ->select('releases', 'r')
      ->fields('r', array('id', 'headline', 'body',
                          'eventdate', 'eventtime', 'eventenddate',
                          'release_date', 'datecreated', 'datemodified'));

    $this->source = new MigrateSourceSQL($query);

    $this->destination = new MigrateDestinationNode('news_release');

    $this->map = new MigrateSQLMap($this->machineName,
      array(
        'id' => array(
          'type' => 'int',
          'length' => 11,
          'unsigned' => TRUE,
          'not null' => TRUE,
          'alias' => 'r',
        ),
      ),
      MigrateDestinationNode::getKeySchema()
    );


    $this->addFieldMapping('title', 'headline');
    $this->addFieldMapping('body', 'body')->arguments(array('format' => 'full_html'));
    $this->addFieldMapping('created', 'datecreated');
    $this->addFieldMapping('changed', 'datemodified');

    // Date field, prepareRow used to format _daterange
    $this->addFieldMapping('field_date', '_daterange');

    // @TODO Set defaultValue to gid of News Releases group.
    $this->addFieldMapping('group_audience')->defaultValue(4);

    $this->addFieldMapping(null, 'eventdate');
    $this->addFieldMapping(null, 'eventtime');
    $this->addFieldMapping(null, 'eventenddate');
  }

  /**
   * (non-PHPdoc)
   * @see Migration::prepareRow()
   */
  public function prepareRow($current_row) {
    $date_data = array(
      'from' => (string) $current_row->eventdate . $current_row->eventtime,
      'to' => (string) $current_row->eventenddate,
    );
    $current_row->_daterange = drupal_json_encode($date_data);
  }
}
